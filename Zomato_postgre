select * from goldusers_signup
select * from users
select * from sales order by userid
select * from product

-- 1. Total Amount spent by each customer 
select sales.userid,sum(product.price) as Total_spent from sales 
join product on sales.product_id = product.product_id group by sales.userid order by sales.userid

-- 2.How many days each customer visited zomato 
select userid,count(distinct created_date) as visits from sales group by userid

-- 3.First Product purchased by each customer
with rankers as (select *,rank() over (partition by userid order by created_date) as pos from sales)
select * from rankers where pos = 1

-- 4. Most purchased item in the menu and how many times that item purchased by all customer
select product_id from sales group by product_id order by count(product_id) desc limit 1
-- ⬆️from this we get the most purchased item
select userid,count(product_id) from sales where product_id = 2 group by userid

-- 5.Most popular item for each customer 
with rnt as(select *,rank() over (partition by userid order by product_total desc) as en from
(select userid,product_id,count(product_id) as product_total from sales group by 1,2 order by userid))
select * from rnt where en = 1

-- 6.first item purcchased by cudtomer after become member on zomato
with aas as(select *,rank() over (partition by sales.userid order by created_date) as rnk from sales 
join goldusers_signup on goldusers_signup.userid = sales.userid where created_date > gold_signup_date)
select * from aas where rnk = 1

7.item purchased by customer just befome become member
with aas as(select *,rank() over (partition by sales.userid order by created_date) as rnk from sales 
join goldusers_signup on goldusers_signup.userid = sales.userid where created_date < gold_signup_date)
select * from aas where rnk = 1

-- 8.total orders and amount spent of each customer befome become member
select s.userid,sum(p.price),count(s.product_id) from sales as s join product as p 
on s.product_id = p.product_id join goldusers_signup as g on s.userid=g.userid  where created_date < gold_signup_date
group by s.userid order by sum(p.price) 

-- 9.points for amount diff for each product
select dd.userid,sum(dd.Reddem_Coins) from 
(select tr.*,rnt/Points as Reddem_Coins from 
(select tt.*, case when product_id = 1 then 5 when product_id = 2 then 2 when  product_id = 3 then 5 else 0 end as Points from
(select p.product_id,s.userid,sum(p.price) rnt from sales as s join product as p 
on s.product_id = p.product_id group by 2,1 order by sum(p.price),s.userid) as tt) as tr ) as dd group by dd.userid

-- 10.total points in one year after the gold membership join and the points is 5 for every 10rs purchase on every product
select *,dd.cost*0.5 as total_points_in_1Year from
(select s.userid,s.product_id ,s.created_date,g.gold_signup_date,p.price as cost from sales s
join goldusers_signup g on g.userid = s.userid join product p on s.product_id=p.product_id where created_date >= gold_signup_date
and created_date <= gold_signup_date + interval '1 year') as dd

-- 11.rank all transaction  of customer
select *,rank() over(partition by userid order by created_date) as tra_rank from sales order by userid

-- 12.rank only members transaction

(select dd.*, case when gold_signup_date is null then 0 else dense_rank() over(partition by User order by gold_signup_date)end as rnk from
(select s.userid as User,s.created_date,s.product_id,g.gold_signup_date from sales s
left join goldusers_signup g on g.userid = s.userid and created_date >= gold_signup_date) as dd ) 
